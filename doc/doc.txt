ethOS-update-manager

Version

0.2.1

Description

ethOS-update-manager is a short script continuously runing and managing results from cmd update or show stats, and logging it in a readable way. It is a specific log manager designed to provided good data performance and to help miners to improve their productivity by tuning easily their local.conf .

It is designed to be run directly from the device to avoid ssh breaking connection problem (common with ethOS 1.2.7 and 1.2.9)

You're free to use update or show stats command, but as update push data to the server for each call, it is recommanded to use show stats.

Licence

GNU General Public License v3.0

Requirements

python : 3.4.3 + (default ethOS python3)

ethos : 1.3.1+

hardware : -

Installation

from /home/ethos/ just git clone https://github.com/AlexandreGazagnes/ethOS-update-manager.git

Usage

considering the folder ethOS-update-manager in filepath /home/ethos/ so as $ ls /home/ethos/ethOS-update-manager returning ethOS-update-manager/

prepare program and folder/file :

$ cd
$ chmod +x /home/ethos/ethOS-update-manager/launch
$ chmod +x /home/ethos/ethOS-update-manager/ethOsUpdateManager/main.py

for manual launch but background work:

$ /home/ethos/ethOS-update-manager/launch

for manual launch but foreground work:

$ /home/ethos/ethOS-update-manager/ethOsUpdateManager/main.py

create alias (shortcup for CLI) :

$ echo "alias --your_shortcut--='/home/ethos/ethOS-update-manager/launch'" >>  /home/ethos/.bashrc

for automatic program launch (background) at each ethos stratup :

$ echo "/home/ethos/ethOS-update-manager/launch" >> /home/ethos/.bashrc

Folders

    data : data file(s) created
    doc : full documentation
    ethOsUpdateManager : main.py (called by launch) and lib
    logs : logs files stdout and stdr
    tests : standard test collection
    utils : various scripts to clean, merge, split, manipulate you data files

Contributing

feel free to submit any issues/pull resquest you want

clone, download and fork at will

Reward

1 ETH for the 100th people to star the project :)

Misc : useful aliases

nano

alias BASHRC='nano .bashrc'
alias LOCAL='nano local.conf'

ON/OFF

alias DISALLOW='disallow and minestop'
alias ALLOW='allow && minestart'
alias R='allow && minestart && r'

show

alias SHOWMINER='show miner'
alias SHOWSTATS='show stats'

azerty

alias qwerty='setxkbmap fr'

Dev

    create config command to handle reset show set configs of all variables
    transform in standalone program with argc/argv manager and full doc
    progress to UpdateManager to RigManager with auto reboot
    pip?
    use logging with log external file
    write full doc and utils and test
    find a new name
    create an install who automaticly create alias and autorun in bashrc


data

find here your data file(s)
if first launch

.counter created that not should be removed/touched/modified

update0.csv file created
for each reboot

if headers are correct, data file will be appended

if not, an new file update1.csv, update2.csv will be created
merging various data files

use utils/merge_datafiles.py
droping dupliacted data

use utils/drop_duplicated.py


tests

find here all testing scripts for ethOS-update-manager


utils

find here various scripts to handle, clean or manipulate your data files Warning every new file create in utils/ not in data/
drop duplicated

for each file in data/ search, find and drop duplicated data
merge datafiles

merge all data files in data/ in one

use drop_duplicated.py after to clean new file if needed
split gpu data

auto split gpu data into data file or in specific file for each gpu
